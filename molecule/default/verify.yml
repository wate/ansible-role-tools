---
- name: Verify
  hosts: all
  gather_facts: true
  become: true
  tasks:
    ## テストの前処理
    - name: Gather facts
      block:
        - name: Gather package facts
          ansible.builtin.package_facts:
            manager: auto
        - name: Gather service facts
          ansible.builtin.service_facts:
        - name: Gather facts on listening ports
          community.general.listen_ports_facts:
            command: ss
        - name: Set assert variables
          ansible.builtin.set_fact:
            listen_tcp_posts: "{{ ansible_facts.tcp_listen | map(attribute='port') | unique | sort | list }}"
            listen_udp_posts: "{{ ansible_facts.udp_listen | map(attribute='port') | unique | sort | list }}"
    ## direnv
    - name: Assert direnv
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['direnv']
    ## bat
    - name: Assert bat
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['bat']
    ## fd
    - name: Assert fd
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['fd-find']
    ## tbls
    - name: Assert tbls
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['tbls']
    ## runn
    - name: Assert runn
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['runn']
    ## delta
    - name: Test delta
      block:
        - name: Assert delta
          ansible.builtin.assert:
            that:
              - ansible_facts.packages['git-delta-musl']
          when: ansible_facts.distribution_major_version is version('11', '<=')
        - name: Assert delta
          ansible.builtin.assert:
            that:
              - ansible_facts.packages['git-delta']
          when: ansible_facts.distribution_major_version is version('11', '>')
    ## D2
    - name: Test D2
      block:
        - name: Check installd d2
          ansible.builtin.stat:
            path: /usr/local/bin/d2
          register: d2_result
        - name: Assert d2
          ansible.builtin.assert:
            that:
              - d2_result.stat.exists
              - d2_result.stat.executable
    ## osv-scanner
    - name: Test osv-scanner
      block:
        - name: Check installd osv-scanner
          ansible.builtin.stat:
            path: /usr/local/bin/osv-scanner
          register: osv_scanner_result
        - name: Assert osv-scanner
          ansible.builtin.assert:
            that:
              - osv_scanner_result.stat.exists
              - osv_scanner_result.stat.executable
    ## glow
    - name: Assert glow
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['glow']
    ## mycli
    - name: Assert mycli
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['mycli']
    ## pgcli
    - name: Test pgcli
      block:
        - name: Assert pgcli
          ansible.builtin.assert:
            that:
              - ansible_facts.packages['pgcli']
          when: ansible_facts.distribution_major_version is version('11', '>')
        - name: Assert package
          when: ansible_facts.distribution_major_version is version('11', '<=')
          block:
            - name: Check pgcli
              ansible.builtin.stat:
                path: ~/.local/bin/pgcli
              become: false
              register: pgcli_result
            - name: Assert pgcli
              ansible.builtin.assert:
                that:
                  - pgcli_result.stat.exists
    ## litecli
    - name: Test litecli
      block:
        - name: Assert litecli
          ansible.builtin.assert:
            that:
              - ansible_facts.packages['litecli']
          when: ansible_facts.distribution_major_version is version('11', '>')
        - name: Assert package
          when: ansible_facts.distribution_major_version is version('11', '<=')
          block:
            - name: Check litecli
              ansible.builtin.stat:
                path: ~/.local/bin/litecli
              become: false
              register: litecli_result
            - name: Assert litecli
              ansible.builtin.assert:
                that:
                  - litecli_result.stat.exists
    ## pre-commit
    - name: Test pre-commit
      block:
        - name: Assert pre-commit
          ansible.builtin.assert:
            that:
              - ansible_facts.packages['pre-commit']
          when: ansible_facts.distribution_major_version is version('11', '>')
        - name: Assert package
          when: ansible_facts.distribution_major_version is version('11', '<=')
          block:
            - name: Check litecli
              ansible.builtin.stat:
                path: ~/.local/bin/pre-commit
              become: false
              register: pre_commit_result
            - name: Assert pre-commit
              ansible.builtin.assert:
                that:
                  - pre_commit_result.stat.exists
    ## graphviz
    - name: Assert graphviz
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['graphviz']
    ## wp-cli
    - name: Check installd wp-cli
      ansible.builtin.stat:
        path: /usr/local/bin/wp
      register: wp_result
    - name: Assert wp-cli
      ansible.builtin.assert:
        that:
          - wp_result.stat.exists
          - wp_result.stat.executable
    ## pict
    - name: Check installd wp-cli
      ansible.builtin.stat:
        path: /usr/local/bin/pict
      register: pict_result
    - name: Assert pict
      ansible.builtin.assert:
        that:
          - pict_result.stat.exists
          - pict_result.stat.executable
    ## mkdocs-material
    - name: Test mkdocs-material
      block:
        - name: Assert mkdocs-material
          ansible.builtin.assert:
            that:
              - ansible_facts.packages['mkdocs-material']
          when: ansible_facts.distribution_major_version is version('11', '>')
        - name: Assert package
          when: ansible_facts.distribution_major_version is version('11', '<=')
          block:
            - name: Check mkdocs
              ansible.builtin.stat:
                path: ~/.local/bin/mkdocs
              become: false
              register: mkdocs_result
            - name: Assert mkdocs-material
              ansible.builtin.assert:
                that:
                  - mkdocs_result.stat.exists
    ## plantuml
    - name: Assert Plantuml
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['plantuml']
    ## tesseract-ocr
    - name: Assert tesseract-ocr
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['tesseract-ocr']
    ## poppler-utils
    - name: Assert poppler-utils
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['poppler-utils']
    ## mecab
    - name: Assert mecab
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['mecab']
