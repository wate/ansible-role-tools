---
- name: Verify
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto
    - name: Gather service facts
      ansible.builtin.service_facts:
    - name: Gather facts on listening ports
      community.general.listen_ports_facts:
        command: ss
    - name: Set assert variables
      ansible.builtin.set_fact:
        listen_tcp_posts: "{{ ansible_facts.tcp_listen | map(attribute='port') | unique | sort | list }}"
        listen_udp_posts: "{{ ansible_facts.udp_listen | map(attribute='port') | unique | sort | list }}"
    ## direnv
    - name: Assert direnv
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['direnv']
    ## tbls
    - name: Check installd tbls
      ansible.builtin.stat:
        path: /usr/local/bin/tbls
      register: tbls_result
    - name: Assert tbls
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['tbls']
    ## mailpit
    - name: Check installd mailpit
      ansible.builtin.stat:
        path: /usr/local/bin/mailpit
      register: mailpit_result
    - name: Assert mailpit
      ansible.builtin.assert:
        that:
          - mailpit_result.stat.exists
          - mailpit_result.stat.executable
          - ansible_facts.services['mailpit.service'] is defined
          - ansible_facts.services['mailpit.service']['state'] == 'running'
          - ansible_facts.services['mailpit.service']['status'] == 'enabled'
          - 1025 in listen_tcp_posts
          - 8025 in listen_tcp_posts
    ## d2
    - name: Check installd d2
      ansible.builtin.stat:
        path: /usr/local/bin/d2
      register: d2_result
    - name: Assert d2
      ansible.builtin.assert:
        that:
          - d2_result.stat.exists
          - d2_result.stat.executable
    ## osv-scanner
    - name: Check installd osv-scanner
      ansible.builtin.stat:
        path: /usr/local/bin/osv-scanner
      register: osv_scanner_result
    - name: Assert mkdocs
      ansible.builtin.assert:
        that:
          - osv_scanner_result.stat.exists
          - osv_scanner_result.stat.executable
    ## wp-cli
    - name: Check installd wp-cli
      ansible.builtin.stat:
        path: /usr/local/bin/wp
      register: wp_result
    - name: Assert wp-cli
      ansible.builtin.assert:
        that:
          - wp_result.stat.exists
          - wp_result.stat.executable
    ## pict
    - name: Check installd wp-cli
      ansible.builtin.stat:
        path: /usr/local/bin/pict
      register: pict_result
    - name: Assert pict
      ansible.builtin.assert:
        that:
          - pict_result.stat.exists
          - pict_result.stat.executable
    ## glow
    - name: Assert glow
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['glow']
    ## mycli
    - name: Assert mycli
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['mycli']
    ## pgcli
    - name: Assert pgcli
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['pgcli']
      when: ansible_facts.distribution_major_version is version('11', '>')
    - name: Assert  package
      when: ansible_facts.distribution_major_version is version('11', '<=')
      block:
        - name: Check pgcli
          ansible.builtin.stat:
            path: ~/.local/bin/pgcli
          become: false
          register: pgcli_result
        - name: Assert pgcli
          ansible.builtin.assert:
            that:
              - pgcli_result.stat.exists
    ## litecli
    - name: Assert litecli
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['litecli']
      when: ansible_facts.distribution_major_version is version('11', '>')
    - name: Assert  package
      when: ansible_facts.distribution_major_version is version('11', '<=')
      block:
        - name: Check litecli
          ansible.builtin.stat:
            path: ~/.local/bin/litecli
          become: false
          register: litecli_result
        - name: Assert litecli
          ansible.builtin.assert:
            that:
              - litecli_result.stat.exists
    ## poppler-utils
    - name: Assert poppler-utils
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['poppler-utils']
    ## mkdocs
    - name: Assert mkdocs
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['mkdocs']
    ## mecab
    - name: Assert mecab
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['mecab']
